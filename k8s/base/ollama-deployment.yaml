apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: falco-ai-alerts
  labels:
    app.kubernetes.io/name: ollama
    app.kubernetes.io/component: ai-provider
    app.kubernetes.io/part-of: falco-ecosystem
spec:
  replicas: 1
  strategy:
    type: Recreate  # Ollama needs persistent storage
  selector:
    matchLabels:
      app.kubernetes.io/name: ollama
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ollama
        app.kubernetes.io/component: ai-provider
    spec:
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - containerPort: 11434
          name: api
          protocol: TCP
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0"
        # Configurable timeout settings for different models
        - name: OLLAMA_REQUEST_TIMEOUT
          value: "30"  # Default for tinyllama (3-10s response)
        - name: OLLAMA_KEEP_ALIVE
          value: "5m"  # Keep model in memory for 5 minutes
        - name: OLLAMA_NUM_PARALLEL
          value: "1"   # Number of parallel requests (adjust based on resources)
        volumeMounts:
        - name: ollama-data
          mountPath: /root/.ollama
        resources:
          # Resource requirements based on model size:
          # - 7B models (llama3.1:7b, mistral:7b): 6-8GB RAM
          # - 13B models (jimscard/whiterabbit-neo:latest): 14-16GB RAM (recommended for cybersecurity)
          # - 30B+ models: 20GB+ RAM
          # Current default is optimized for 7B models for reliability and speed
          requests:
            memory: "6Gi"   # Sufficient for 7B models
            cpu: "1000m"    # Moderate CPU for good performance
          limits:
            memory: "8Gi"   # Headroom for 7B model inference
            cpu: "2000m"    # Allow burst for inference
        livenessProbe:
          httpGet:
            path: /api/tags
            port: api
          initialDelaySeconds: 60   # Increased for model loading
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/tags
            port: api
          initialDelaySeconds: 30   # Increased for model loading
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: ollama-data
        persistentVolumeClaim:
          claimName: ollama-data
      securityContext:
        runAsNonRoot: false  # Ollama needs root for GPU access
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: falco-ai-alerts
  labels:
    app.kubernetes.io/name: ollama
    app.kubernetes.io/component: ai-provider
spec:
  type: ClusterIP
  ports:
  - name: api
    port: 11434
    targetPort: api
    protocol: TCP
  selector:
    app.kubernetes.io/name: ollama
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-data
  namespace: falco-ai-alerts
  labels:
    app.kubernetes.io/name: ollama
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi  # Sufficient for 7B models (~4GB) + overhead and cache 